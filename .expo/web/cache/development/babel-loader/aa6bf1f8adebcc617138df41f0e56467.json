{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\academyjs\\\\viikko10\\\\pv2_reactnative\\\\todolist\\\\App.js\";\nimport React, { useState, useEffect } from 'react';\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport ToolbarAndroid from \"react-native-web/dist/exports/ToolbarAndroid\";\nimport Header from \"./components/Header\";\nimport ListItem from \"./components/ListItem\";\nimport AddItem from \"./components/AddItem\";\n\nvar App = function App() {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      items = _useState2[0],\n      setItems = _useState2[1];\n\n  useEffect(function () {\n    getAndSetTasksFromApi();\n  }, []);\n\n  var getAndSetTasksFromApi = function getAndSetTasksFromApi() {\n    var data, dataParsed;\n    return _regeneratorRuntime.async(function getAndSetTasksFromApi$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(fetch('https://jsonplaceholder.typicode.com/todos?_limit=4', {\n              headers: {\n                Accept: 'application/json'\n              }\n            }));\n\n          case 2:\n            data = _context.sent;\n            _context.next = 5;\n            return _regeneratorRuntime.awrap(data.json());\n\n          case 5:\n            dataParsed = _context.sent;\n            setItems(dataParsed);\n\n          case 7:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var deleteItem = function deleteItem(id) {\n    return _regeneratorRuntime.async(function deleteItem$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            setItems(function (prevItems) {\n              return prevItems.filter(function (item) {\n                return item.id !== id;\n              });\n            });\n            _context2.next = 3;\n            return _regeneratorRuntime.awrap(fetch(\"https://jsonplaceholder.typicode.com/todos/\" + id, {\n              method: 'DELETE'\n            }));\n\n          case 3:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var addItem = function addItem(title) {\n    var response, parsed;\n    return _regeneratorRuntime.async(function addItem$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            console.log(title);\n            _context3.next = 3;\n            return _regeneratorRuntime.awrap(fetch('https://jsonplaceholder.typicode.com/todos', {\n              method: 'POST',\n              headers: {\n                'Content-type': 'application/json'\n              },\n              body: JSON.stringify({\n                title: title,\n                completed: false\n              })\n            }));\n\n          case 3:\n            response = _context3.sent;\n            _context3.next = 6;\n            return _regeneratorRuntime.awrap(response.json());\n\n          case 6:\n            parsed = _context3.sent;\n            setItems([parsed].concat(_toConsumableArray(items)));\n\n          case 8:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var toggleCompleted = function toggleCompleted(id) {\n    var itemToBeChanged, newItems, response, parsed;\n    return _regeneratorRuntime.async(function toggleCompleted$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            newItems = items.map(function (item) {\n              if (item.id === id) {\n                item.completed = !item.completed;\n                itemToBeChanged = item;\n              }\n\n              return item;\n            });\n            setItems(newItems);\n            _context4.next = 4;\n            return _regeneratorRuntime.awrap(fetch(\"https://jsonplaceholder.typicode.com/todos/\" + id, {\n              method: 'PUT',\n              headers: {\n                'Content-type': 'application/json'\n              },\n              body: JSON.stringify(itemToBeChanged)\n            }));\n\n          case 4:\n            response = _context4.sent;\n            _context4.next = 7;\n            return _regeneratorRuntime.awrap(response.json());\n\n          case 7:\n            parsed = _context4.sent;\n            console.log(parsed);\n\n          case 9:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return React.createElement(SafeAreaView, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    }\n  }, React.createElement(Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    }\n  }), React.createElement(AddItem, {\n    addItem: addItem,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    }\n  }), React.createElement(FlatList, {\n    data: items,\n    renderItem: function renderItem(_ref) {\n      var item = _ref.item;\n      return React.createElement(ListItem, {\n        item: item,\n        deleteItem: deleteItem,\n        toggleCompleted: toggleCompleted,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        }\n      });\n    },\n    keyExtractor: function keyExtractor(item) {\n      return item.id;\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    }\n  }));\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    paddingTop: 0\n  }\n});\nexport default App;","map":{"version":3,"sources":["C:/academyjs/viikko10/pv2_reactnative/todolist/App.js"],"names":["React","useState","useEffect","Header","ListItem","AddItem","App","items","setItems","getAndSetTasksFromApi","fetch","headers","Accept","data","json","dataParsed","deleteItem","id","prevItems","filter","item","method","addItem","title","console","log","body","JSON","stringify","completed","response","parsed","toggleCompleted","newItems","map","itemToBeChanged","styles","container","StyleSheet","create","flex","paddingTop"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {\n  SafeAreaView,\n  Text,\n  StyleSheet,\n  FlatList,\n  ToolbarAndroid\n} from 'react-native';\nimport Header from './components/Header';\nimport ListItem from './components/ListItem';\nimport AddItem from './components/AddItem';\n\nconst App = () => {\n  const [items, setItems] = useState([]);\n\n  useEffect(() => {\n    getAndSetTasksFromApi();\n  }, []);\n\n  const getAndSetTasksFromApi = async () => {\n    let data = await fetch(\n      'https://jsonplaceholder.typicode.com/todos?_limit=4',\n      {\n        headers: {\n          Accept: 'application/json'\n        }\n      }\n    );\n    let dataParsed = await data.json();\n    setItems(dataParsed);\n  };\n\n  const deleteItem = async id => {\n    //Removing from the list first for better responsiveness\n    setItems(prevItems => {\n      return prevItems.filter(item => item.id !== id);\n    });\n    await fetch(`https://jsonplaceholder.typicode.com/todos/${id}`, {\n      method: 'DELETE'\n    });\n  };\n\n  const addItem = async title => {\n    // let ids = items.map(item => item.id);\n    // let idMax = Math.max(...ids);\n    // setItems([{ id: idMax + 1, title }, ...items]);\n    console.log(title);\n    let response = await fetch(\n      'https://jsonplaceholder.typicode.com/todos',\n\n      {\n        method: 'POST',\n        headers: {\n          'Content-type': 'application/json'\n        },\n        body: JSON.stringify({ title, completed: false })\n      }\n    );\n    let parsed = await response.json();\n    setItems([parsed, ...items]);\n  };\n\n  const toggleCompleted = async id => {\n    let itemToBeChanged;\n    //Changing UI first for responsiveness\n    let newItems = items.map(item => {\n      if (item.id === id) {\n        item.completed = !item.completed;\n        itemToBeChanged = item;\n      }\n      return item;\n    });\n    setItems(newItems);\n    //PUT request after\n    let response = await fetch(\n      `https://jsonplaceholder.typicode.com/todos/${id}`,\n\n      {\n        method: 'PUT',\n        headers: {\n          'Content-type': 'application/json'\n        },\n        body: JSON.stringify(itemToBeChanged)\n      }\n    );\n    let parsed = await response.json();\n    console.log(parsed);\n  };\n\n  return (\n    <SafeAreaView style={styles.container}>\n      <Header />\n      <AddItem addItem={addItem} />\n      <FlatList\n        data={items}\n        renderItem={({ item }) => (\n          <ListItem\n            item={item}\n            deleteItem={deleteItem}\n            toggleCompleted={toggleCompleted}\n          />\n        )}\n        keyExtractor={item => item.id}\n      />\n    </SafeAreaView>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    paddingTop: 0\n  }\n});\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}