{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\academyjs\\\\viikko10\\\\pv2_reactnative\\\\shoppinglist\\\\App.js\";\nimport React, { useState, useEffect } from 'react';\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Header from \"./components/Header\";\nimport ListItem from \"./components/ListItem\";\nimport AddItem from \"./components/AddItem\";\n\nvar App = function App() {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      items = _useState2[0],\n      setItems = _useState2[1];\n\n  useEffect(function () {\n    getAndSetTasksFromApi();\n  }, []);\n\n  var getAndSetTasksFromApi = function getAndSetTasksFromApi() {\n    var data, dataParsed;\n    return _regeneratorRuntime.async(function getAndSetTasksFromApi$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(fetch('https://jsonplaceholder.typicode.com/todos?_limit=4', {\n              headers: {\n                Accept: 'application/json'\n              }\n            }));\n\n          case 2:\n            data = _context.sent;\n            _context.next = 5;\n            return _regeneratorRuntime.awrap(data.json());\n\n          case 5:\n            dataParsed = _context.sent;\n            setItems(dataParsed);\n\n          case 7:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var deleteItem = function deleteItem(id) {\n    var response;\n    return _regeneratorRuntime.async(function deleteItem$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regeneratorRuntime.awrap(fetch(\"https://jsonplaceholder.typicode.com/todos/\" + id, {\n              method: 'DELETE'\n            }));\n\n          case 2:\n            response = _context2.sent;\n\n          case 3:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var addItem = function addItem(title) {\n    var response, parsed;\n    return _regeneratorRuntime.async(function addItem$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.next = 2;\n            return _regeneratorRuntime.awrap(fetch('https://jsonplaceholder.typicode.com/todos', {\n              method: 'POST',\n              headers: {\n                'Content-type': 'application/json'\n              },\n              body: JSON.stringify({\n                title: title,\n                completed: false\n              })\n            }));\n\n          case 2:\n            response = _context3.sent;\n            _context3.next = 5;\n            return _regeneratorRuntime.awrap(response.json());\n\n          case 5:\n            parsed = _context3.sent;\n            setItems([parsed].concat(_toConsumableArray(items)));\n\n          case 7:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return React.createElement(SafeAreaView, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    }\n  }, React.createElement(Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    }\n  }), React.createElement(AddItem, {\n    addItem: addItem,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    }\n  }), React.createElement(FlatList, {\n    data: items,\n    renderItem: function renderItem(_ref) {\n      var item = _ref.item;\n      return React.createElement(ListItem, {\n        item: item,\n        deleteItem: deleteItem,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        }\n      });\n    },\n    keyExtractor: function keyExtractor(item) {\n      return item.id;\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    }\n  }));\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    paddingTop: 60\n  }\n});\nexport default App;","map":{"version":3,"sources":["C:/academyjs/viikko10/pv2_reactnative/shoppinglist/App.js"],"names":["React","useState","useEffect","Header","ListItem","AddItem","App","items","setItems","getAndSetTasksFromApi","fetch","headers","Accept","data","json","dataParsed","deleteItem","id","method","response","addItem","title","body","JSON","stringify","completed","parsed","styles","container","item","StyleSheet","create","flex","paddingTop"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { SafeAreaView, Text, StyleSheet, FlatList } from 'react-native';\nimport Header from './components/Header';\nimport ListItem from './components/ListItem';\nimport AddItem from './components/AddItem';\n\nconst App = () => {\n  const [items, setItems] = useState([]);\n\n  useEffect(() => {\n    getAndSetTasksFromApi();\n  }, []);\n\n  const getAndSetTasksFromApi = async () => {\n    let data = await fetch(\n      'https://jsonplaceholder.typicode.com/todos?_limit=4',\n      {\n        headers: {\n          Accept: 'application/json'\n        }\n      }\n    );\n    let dataParsed = await data.json();\n    setItems(dataParsed);\n  };\n\n  const deleteItem = async id => {\n    // setItems(prevItems => {\n    //   return prevItems.filter(item => item.id !== id);\n    // });\n    let response = await fetch(\n      `https://jsonplaceholder.typicode.com/todos/${id}`,\n      {\n        method: 'DELETE'\n      }\n    );\n  };\n\n  const addItem = async title => {\n    // let ids = items.map(item => item.id);\n    // let idMax = Math.max(...ids);\n    // setItems([{ id: idMax + 1, title }, ...items]);\n    let response = await fetch(\n      'https://jsonplaceholder.typicode.com/todos',\n\n      {\n        method: 'POST',\n        headers: {\n          'Content-type': 'application/json'\n        },\n        body: JSON.stringify({ title, completed: false })\n      }\n    );\n    let parsed = await response.json();\n    setItems([parsed, ...items]);\n  };\n\n  return (\n    <SafeAreaView style={styles.container}>\n      <Header />\n      <AddItem addItem={addItem} />\n      <FlatList\n        data={items}\n        renderItem={({ item }) => (\n          <ListItem item={item} deleteItem={deleteItem} />\n        )}\n        keyExtractor={item => item.id}\n      />\n    </SafeAreaView>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    paddingTop: 60\n  }\n});\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}